# Simplified Reusable Workflow for a Single Target Domain
name: Reusable Scan Pipeline (Single Target)

on:
  workflow_call:
    inputs:
      environment_name:
        required: true
        type: string
    secrets:
      SESSION_COOKIE:
        required: false
      DISCORD_WEBHOOK_URL:
        required: false

jobs:
  # This single job replaces the previous four-job chain.
  scan-and-commit:
    name: "Scan, Consolidate & Notify (${{ inputs.environment_name }})"
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment_name }}
    steps:
      - name: Checkout Full Git History
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for git diff

      - name: Set up Go & Node
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Scanning Tools
        run: |
          go install -v github.com/projectdiscovery/katana/cmd/katana@latest
          go install -v github.com/lc/gau/v2/cmd/gau@latest
          npm install -g js-beautify
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
          
          # Install analysis tools
          sudo apt-get update && sudo apt-get install -y python3-pip yara
          pip install git+https://github.com/m4ll0k/SecretFinder.git
          pip install git+https://github.com/GerbenJavado/LinkFinder.git

      - name: Discover and Process JS files
        env:
          SESSION_COOKIE: ${{ secrets.SESSION_COOKIE }}
        run: |
          echo "Scanning single target: ${{ vars.TARGET_DOMAIN }}"
          echo "${{ vars.TARGET_DOMAIN }}" > target.txt

          KATANA_HEADER_ARGS=("-H" "User-Agent: Mozilla/5.0")
          if [ -n "$SESSION_COOKIE" ]; then KATANA_HEADER_ARGS+=("-H" "Cookie: $SESSION_COOKIE"); fi
          
          # Run discovery tools on the single domain
          katana -list target.txt -jc -silent -d 5 -c 25 "${KATANA_HEADER_ARGS[@]}" -o katana-js.txt || true
          cat target.txt | gau --threads 5 > gau-js.txt
          
          # Combine, sort, and strictly filter for .js files
          cat katana-js.txt gau-js.txt | sort -u | grep -iE '\.js$' > all_js_urls.txt

          echo "Found $(wc -l < all_js_urls.txt) unique JS URLs to process."
          OUTPUT_DIR="js_files_temp"
          mkdir -p "$OUTPUT_DIR"
          
          WGET_ARGS="--user-agent=Mozilla/5.0 --quiet --no-check-certificate --tries=2 --timeout=20 --dns-timeout=5 --read-timeout=15"
          if [ -n "$SESSION_COOKIE" ]; then WGET_ARGS="$WGET_ARGS --header=Cookie:$SESSION_COOKIE"; fi

          process_url() {
            url="$1"
            if [ -z "$url" ]; then return; fi
            hashed_filename=$(echo -n "$url" | md5sum | awk '{print $1}').js
            JS_FILE_PATH="$OUTPUT_DIR/$hashed_filename"

            if wget $WGET_ARGS -O "$JS_FILE_PATH" "$url"; then
              if [ -s "$JS_FILE_PATH" ]; then
                js-beautify -r "$JS_FILE_PATH" || echo "⚠️ js-beautify failed on $JS_FILE_PATH"
                echo "$hashed_filename,$url" >> "$OUTPUT_DIR/index.txt"
              else
                rm -f "$JS_FILE_PATH"
              fi
            fi
          }
          export -f process_url; export WGET_ARGS; export OUTPUT_DIR
          cat all_js_urls.txt | xargs -P 25 --no-run-if-empty -I {} bash -c 'process_url "$@"' _ {}

      - name: Consolidate and Commit Changes
        id: git_commit
        run: |
          TARGET_DIR="js_files/${{ vars.TARGET_DOMAIN }}"
          mkdir -p "$TARGET_DIR"

          # Use rsync to move new files and create the index
          rsync -av js_files_temp/ "$TARGET_DIR/"

          if [ -f "$TARGET_DIR/index.txt" ]; then
             sort -u -o "$TARGET_DIR/index.txt" "$TARGET_DIR/index.txt"
          fi

          git config --global user.name "GitHub Action Bot"
          git config --global user.email "action-bot@github.com"
          git add -A "$TARGET_DIR/"

          if git diff --staged --quiet; then
            echo "No new JS files found for ${{ vars.TARGET_DOMAIN }}."
            echo "changes_detected=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          git commit -m "[JS Scan] Update files for ${{ vars.TARGET_DOMAIN }}"
          git push
          echo "changes_detected=true" >> $GITHUB_OUTPUT
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD -- "$TARGET_DIR/")
          echo "changed_files<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGED_FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Analyze Changed Files & Notify
        if: steps.git_commit.outputs.changes_detected == 'true'
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          TARGET_DOMAIN: ${{ vars.TARGET_DOMAIN }}
        run: |
          CHANGED_JS_FILES=$(echo "${{ steps.git_commit.outputs.changed_files }}" | grep '\.js$')
          if [ -z "$CHANGED_JS_FILES" ]; then
            echo "✅ No changed JS files to analyze."
          else
            echo "🔬 Analyzing changed JS files..."
            chmod +x analyze_js.sh
            echo "$CHANGED_JS_FILES" | ./analyze_js.sh
          fi

          echo "🚀 Notifying about changes..."
          chmod +x send_notification.sh
          ./send_notification.sh
